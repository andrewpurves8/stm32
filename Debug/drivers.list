
drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000470  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000530  08000538  00010538  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000530  08000530  00010538  2**0
                  CONTENTS
  4 .ARM          00000000  08000530  08000530  00010538  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000530  08000538  00010538  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000530  08000530  00010530  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000534  08000534  00010534  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010538  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000538  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000538  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00010538  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00010560  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000077e  00000000  00000000  000105a3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000027b  00000000  00000000  00010d21  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000a8  00000000  00000000  00010fa0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000073  00000000  00000000  00011048  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0000135f  00000000  00000000  000110bb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000c51  00000000  00000000  0001241a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00004960  00000000  00000000  0001306b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000190  00000000  00000000  000179cc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000057  00000000  00000000  00017b5c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000000 	.word	0x20000000
 80000e0:	00000000 	.word	0x00000000
 80000e4:	08000518 	.word	0x08000518

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000004 	.word	0x20000004
 8000104:	08000518 	.word	0x08000518

08000108 <delay>:
#define HIGH 1
#define LOW 0
#define BTN_PRESSED LOW

void delay(void)
{
 8000108:	b580      	push	{r7, lr}
 800010a:	b082      	sub	sp, #8
 800010c:	af00      	add	r7, sp, #0
	for (uint32_t i = 0; i < 250000 ; i++);
 800010e:	2300      	movs	r3, #0
 8000110:	607b      	str	r3, [r7, #4]
 8000112:	e002      	b.n	800011a <delay+0x12>
 8000114:	687b      	ldr	r3, [r7, #4]
 8000116:	3301      	adds	r3, #1
 8000118:	607b      	str	r3, [r7, #4]
 800011a:	687b      	ldr	r3, [r7, #4]
 800011c:	4a03      	ldr	r2, [pc, #12]	; (800012c <delay+0x24>)
 800011e:	4293      	cmp	r3, r2
 8000120:	d9f8      	bls.n	8000114 <delay+0xc>
}
 8000122:	46c0      	nop			; (mov r8, r8)
 8000124:	46c0      	nop			; (mov r8, r8)
 8000126:	46bd      	mov	sp, r7
 8000128:	b002      	add	sp, #8
 800012a:	bd80      	pop	{r7, pc}
 800012c:	0003d08f 	.word	0x0003d08f

08000130 <main>:


int main(void)
{
 8000130:	b590      	push	{r4, r7, lr}
 8000132:	b087      	sub	sp, #28
 8000134:	af00      	add	r7, sp, #0
	GPIO_Handle_t gpioLed, gpioBtn;

	gpioLed.pGPIOx = GPIOA;
 8000136:	240c      	movs	r4, #12
 8000138:	193b      	adds	r3, r7, r4
 800013a:	22a0      	movs	r2, #160	; 0xa0
 800013c:	05d2      	lsls	r2, r2, #23
 800013e:	601a      	str	r2, [r3, #0]
	gpioLed.pinConfig.pinNumber = GPIO_PIN_NO_5;
 8000140:	193b      	adds	r3, r7, r4
 8000142:	2205      	movs	r2, #5
 8000144:	711a      	strb	r2, [r3, #4]
	gpioLed.pinConfig.pinMode = GPIO_MODE_OUT;
 8000146:	193b      	adds	r3, r7, r4
 8000148:	2201      	movs	r2, #1
 800014a:	715a      	strb	r2, [r3, #5]
	gpioLed.pinConfig.pinSpeed = GPIO_SPEED_FAST;
 800014c:	193b      	adds	r3, r7, r4
 800014e:	2202      	movs	r2, #2
 8000150:	719a      	strb	r2, [r3, #6]
	gpioLed.pinConfig.pinOPType = GPIO_OP_TYPE_PP;
 8000152:	193b      	adds	r3, r7, r4
 8000154:	2200      	movs	r2, #0
 8000156:	721a      	strb	r2, [r3, #8]
	gpioLed.pinConfig.pinPuPdControl = GPIO_NO_PUPD;
 8000158:	193b      	adds	r3, r7, r4
 800015a:	2200      	movs	r2, #0
 800015c:	71da      	strb	r2, [r3, #7]

	GPIO_PeriClockControl(GPIOA, ENABLE);
 800015e:	23a0      	movs	r3, #160	; 0xa0
 8000160:	05db      	lsls	r3, r3, #23
 8000162:	2101      	movs	r1, #1
 8000164:	0018      	movs	r0, r3
 8000166:	f000 f859 	bl	800021c <GPIO_PeriClockControl>
	GPIO_Init(&gpioLed);
 800016a:	193b      	adds	r3, r7, r4
 800016c:	0018      	movs	r0, r3
 800016e:	f000 f8b3 	bl	80002d8 <GPIO_Init>

	gpioBtn.pGPIOx = GPIOC;
 8000172:	003b      	movs	r3, r7
 8000174:	4a13      	ldr	r2, [pc, #76]	; (80001c4 <main+0x94>)
 8000176:	601a      	str	r2, [r3, #0]
	gpioBtn.pinConfig.pinNumber = GPIO_PIN_NO_13;
 8000178:	003b      	movs	r3, r7
 800017a:	220d      	movs	r2, #13
 800017c:	711a      	strb	r2, [r3, #4]
	gpioBtn.pinConfig.pinMode = GPIO_MODE_IN;
 800017e:	003b      	movs	r3, r7
 8000180:	2200      	movs	r2, #0
 8000182:	715a      	strb	r2, [r3, #5]
	gpioBtn.pinConfig.pinSpeed = GPIO_SPEED_FAST;
 8000184:	003b      	movs	r3, r7
 8000186:	2202      	movs	r2, #2
 8000188:	719a      	strb	r2, [r3, #6]
	gpioBtn.pinConfig.pinPuPdControl = GPIO_NO_PUPD;
 800018a:	003b      	movs	r3, r7
 800018c:	2200      	movs	r2, #0
 800018e:	71da      	strb	r2, [r3, #7]

	GPIO_PeriClockControl(GPIOC, ENABLE);
 8000190:	4b0c      	ldr	r3, [pc, #48]	; (80001c4 <main+0x94>)
 8000192:	2101      	movs	r1, #1
 8000194:	0018      	movs	r0, r3
 8000196:	f000 f841 	bl	800021c <GPIO_PeriClockControl>
	GPIO_Init(&gpioBtn);
 800019a:	003b      	movs	r3, r7
 800019c:	0018      	movs	r0, r3
 800019e:	f000 f89b 	bl	80002d8 <GPIO_Init>

	while(1)
	{
		if (GPIO_ReadFromInputPin(GPIOC, GPIO_PIN_NO_13) == BTN_PRESSED)
 80001a2:	4b08      	ldr	r3, [pc, #32]	; (80001c4 <main+0x94>)
 80001a4:	210d      	movs	r1, #13
 80001a6:	0018      	movs	r0, r3
 80001a8:	f000 f968 	bl	800047c <GPIO_ReadFromInputPin>
 80001ac:	1e03      	subs	r3, r0, #0
 80001ae:	d1f8      	bne.n	80001a2 <main+0x72>
		{
			GPIO_ToggleOutputPin(GPIOA, GPIO_PIN_NO_5);
 80001b0:	23a0      	movs	r3, #160	; 0xa0
 80001b2:	05db      	lsls	r3, r3, #23
 80001b4:	2105      	movs	r1, #5
 80001b6:	0018      	movs	r0, r3
 80001b8:	f000 f975 	bl	80004a6 <GPIO_ToggleOutputPin>
			delay();
 80001bc:	f7ff ffa4 	bl	8000108 <delay>
		if (GPIO_ReadFromInputPin(GPIOC, GPIO_PIN_NO_13) == BTN_PRESSED)
 80001c0:	e7ef      	b.n	80001a2 <main+0x72>
 80001c2:	46c0      	nop			; (mov r8, r8)
 80001c4:	50000800 	.word	0x50000800

080001c8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80001c8:	480d      	ldr	r0, [pc, #52]	; (8000200 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80001ca:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80001cc:	e000      	b.n	80001d0 <Reset_Handler+0x8>
 80001ce:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80001d0:	480c      	ldr	r0, [pc, #48]	; (8000204 <LoopForever+0x6>)
  ldr r1, =_edata
 80001d2:	490d      	ldr	r1, [pc, #52]	; (8000208 <LoopForever+0xa>)
  ldr r2, =_sidata
 80001d4:	4a0d      	ldr	r2, [pc, #52]	; (800020c <LoopForever+0xe>)
  movs r3, #0
 80001d6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80001d8:	e002      	b.n	80001e0 <LoopCopyDataInit>

080001da <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80001da:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80001dc:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80001de:	3304      	adds	r3, #4

080001e0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80001e0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80001e2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80001e4:	d3f9      	bcc.n	80001da <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80001e6:	4a0a      	ldr	r2, [pc, #40]	; (8000210 <LoopForever+0x12>)
  ldr r4, =_ebss
 80001e8:	4c0a      	ldr	r4, [pc, #40]	; (8000214 <LoopForever+0x16>)
  movs r3, #0
 80001ea:	2300      	movs	r3, #0
  b LoopFillZerobss
 80001ec:	e001      	b.n	80001f2 <LoopFillZerobss>

080001ee <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80001ee:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80001f0:	3204      	adds	r2, #4

080001f2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80001f2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80001f4:	d3fb      	bcc.n	80001ee <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80001f6:	f000 f96b 	bl	80004d0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80001fa:	f7ff ff99 	bl	8000130 <main>

080001fe <LoopForever>:

LoopForever:
  b LoopForever
 80001fe:	e7fe      	b.n	80001fe <LoopForever>
  ldr   r0, =_estack
 8000200:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 8000204:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000208:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 800020c:	08000538 	.word	0x08000538
  ldr r2, =_sbss
 8000210:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000214:	2000001c 	.word	0x2000001c

08000218 <ADC_COMP_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000218:	e7fe      	b.n	8000218 <ADC_COMP_IRQHandler>
	...

0800021c <GPIO_PeriClockControl>:
 */

#include "stm32l07xx_gpio_driver.h"

void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t en)
{
 800021c:	b580      	push	{r7, lr}
 800021e:	b082      	sub	sp, #8
 8000220:	af00      	add	r7, sp, #0
 8000222:	6078      	str	r0, [r7, #4]
 8000224:	000a      	movs	r2, r1
 8000226:	1cfb      	adds	r3, r7, #3
 8000228:	701a      	strb	r2, [r3, #0]
	if (en == ENABLE)
 800022a:	1cfb      	adds	r3, r7, #3
 800022c:	781b      	ldrb	r3, [r3, #0]
 800022e:	2b01      	cmp	r3, #1
 8000230:	d141      	bne.n	80002b6 <GPIO_PeriClockControl+0x9a>
	{
		if (pGPIOx == GPIOA)
 8000232:	687a      	ldr	r2, [r7, #4]
 8000234:	23a0      	movs	r3, #160	; 0xa0
 8000236:	05db      	lsls	r3, r3, #23
 8000238:	429a      	cmp	r2, r3
 800023a:	d106      	bne.n	800024a <GPIO_PeriClockControl+0x2e>
		{
			GPIOA_PCLK_EN();
 800023c:	4b20      	ldr	r3, [pc, #128]	; (80002c0 <GPIO_PeriClockControl+0xa4>)
 800023e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8000240:	4b1f      	ldr	r3, [pc, #124]	; (80002c0 <GPIO_PeriClockControl+0xa4>)
 8000242:	2101      	movs	r1, #1
 8000244:	430a      	orrs	r2, r1
 8000246:	62da      	str	r2, [r3, #44]	; 0x2c
	}
	else
	{
		//TODO
	}
}
 8000248:	e035      	b.n	80002b6 <GPIO_PeriClockControl+0x9a>
		else if (pGPIOx == GPIOB)
 800024a:	687b      	ldr	r3, [r7, #4]
 800024c:	4a1d      	ldr	r2, [pc, #116]	; (80002c4 <GPIO_PeriClockControl+0xa8>)
 800024e:	4293      	cmp	r3, r2
 8000250:	d106      	bne.n	8000260 <GPIO_PeriClockControl+0x44>
			GPIOB_PCLK_EN();
 8000252:	4b1b      	ldr	r3, [pc, #108]	; (80002c0 <GPIO_PeriClockControl+0xa4>)
 8000254:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8000256:	4b1a      	ldr	r3, [pc, #104]	; (80002c0 <GPIO_PeriClockControl+0xa4>)
 8000258:	2102      	movs	r1, #2
 800025a:	430a      	orrs	r2, r1
 800025c:	62da      	str	r2, [r3, #44]	; 0x2c
}
 800025e:	e02a      	b.n	80002b6 <GPIO_PeriClockControl+0x9a>
		else if (pGPIOx == GPIOC)
 8000260:	687b      	ldr	r3, [r7, #4]
 8000262:	4a19      	ldr	r2, [pc, #100]	; (80002c8 <GPIO_PeriClockControl+0xac>)
 8000264:	4293      	cmp	r3, r2
 8000266:	d106      	bne.n	8000276 <GPIO_PeriClockControl+0x5a>
			GPIOC_PCLK_EN();
 8000268:	4b15      	ldr	r3, [pc, #84]	; (80002c0 <GPIO_PeriClockControl+0xa4>)
 800026a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800026c:	4b14      	ldr	r3, [pc, #80]	; (80002c0 <GPIO_PeriClockControl+0xa4>)
 800026e:	2104      	movs	r1, #4
 8000270:	430a      	orrs	r2, r1
 8000272:	62da      	str	r2, [r3, #44]	; 0x2c
}
 8000274:	e01f      	b.n	80002b6 <GPIO_PeriClockControl+0x9a>
		else if (pGPIOx == GPIOD)
 8000276:	687b      	ldr	r3, [r7, #4]
 8000278:	4a14      	ldr	r2, [pc, #80]	; (80002cc <GPIO_PeriClockControl+0xb0>)
 800027a:	4293      	cmp	r3, r2
 800027c:	d106      	bne.n	800028c <GPIO_PeriClockControl+0x70>
			GPIOD_PCLK_EN();
 800027e:	4b10      	ldr	r3, [pc, #64]	; (80002c0 <GPIO_PeriClockControl+0xa4>)
 8000280:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8000282:	4b0f      	ldr	r3, [pc, #60]	; (80002c0 <GPIO_PeriClockControl+0xa4>)
 8000284:	2108      	movs	r1, #8
 8000286:	430a      	orrs	r2, r1
 8000288:	62da      	str	r2, [r3, #44]	; 0x2c
}
 800028a:	e014      	b.n	80002b6 <GPIO_PeriClockControl+0x9a>
		else if (pGPIOx == GPIOE)
 800028c:	687b      	ldr	r3, [r7, #4]
 800028e:	4a10      	ldr	r2, [pc, #64]	; (80002d0 <GPIO_PeriClockControl+0xb4>)
 8000290:	4293      	cmp	r3, r2
 8000292:	d106      	bne.n	80002a2 <GPIO_PeriClockControl+0x86>
			GPIOE_PCLK_EN();
 8000294:	4b0a      	ldr	r3, [pc, #40]	; (80002c0 <GPIO_PeriClockControl+0xa4>)
 8000296:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8000298:	4b09      	ldr	r3, [pc, #36]	; (80002c0 <GPIO_PeriClockControl+0xa4>)
 800029a:	2110      	movs	r1, #16
 800029c:	430a      	orrs	r2, r1
 800029e:	62da      	str	r2, [r3, #44]	; 0x2c
}
 80002a0:	e009      	b.n	80002b6 <GPIO_PeriClockControl+0x9a>
		else if (pGPIOx == GPIOH)
 80002a2:	687b      	ldr	r3, [r7, #4]
 80002a4:	4a0b      	ldr	r2, [pc, #44]	; (80002d4 <GPIO_PeriClockControl+0xb8>)
 80002a6:	4293      	cmp	r3, r2
 80002a8:	d105      	bne.n	80002b6 <GPIO_PeriClockControl+0x9a>
			GPIOH_PCLK_EN();
 80002aa:	4b05      	ldr	r3, [pc, #20]	; (80002c0 <GPIO_PeriClockControl+0xa4>)
 80002ac:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80002ae:	4b04      	ldr	r3, [pc, #16]	; (80002c0 <GPIO_PeriClockControl+0xa4>)
 80002b0:	2180      	movs	r1, #128	; 0x80
 80002b2:	430a      	orrs	r2, r1
 80002b4:	62da      	str	r2, [r3, #44]	; 0x2c
}
 80002b6:	46c0      	nop			; (mov r8, r8)
 80002b8:	46bd      	mov	sp, r7
 80002ba:	b002      	add	sp, #8
 80002bc:	bd80      	pop	{r7, pc}
 80002be:	46c0      	nop			; (mov r8, r8)
 80002c0:	40021000 	.word	0x40021000
 80002c4:	50000400 	.word	0x50000400
 80002c8:	50000800 	.word	0x50000800
 80002cc:	50000c00 	.word	0x50000c00
 80002d0:	50001000 	.word	0x50001000
 80002d4:	50001c00 	.word	0x50001c00

080002d8 <GPIO_Init>:


void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 80002d8:	b5b0      	push	{r4, r5, r7, lr}
 80002da:	b084      	sub	sp, #16
 80002dc:	af00      	add	r7, sp, #0
 80002de:	6078      	str	r0, [r7, #4]
	uint32_t temp=0;
 80002e0:	2300      	movs	r3, #0
 80002e2:	60fb      	str	r3, [r7, #12]

	// enable the peripheral clock
	GPIO_PeriClockControl(pGPIOHandle->pGPIOx, ENABLE);
 80002e4:	687b      	ldr	r3, [r7, #4]
 80002e6:	681b      	ldr	r3, [r3, #0]
 80002e8:	2101      	movs	r1, #1
 80002ea:	0018      	movs	r0, r3
 80002ec:	f7ff ff96 	bl	800021c <GPIO_PeriClockControl>

	// configure the mode of gpio pin
	if (pGPIOHandle->pinConfig.pinMode <= GPIO_MODE_ANALOG)
 80002f0:	687b      	ldr	r3, [r7, #4]
 80002f2:	795b      	ldrb	r3, [r3, #5]
 80002f4:	2b03      	cmp	r3, #3
 80002f6:	d81f      	bhi.n	8000338 <GPIO_Init+0x60>
	{
		// non interrupt mode
		temp = (pGPIOHandle->pinConfig.pinMode << (2 * pGPIOHandle->pinConfig.pinNumber ));
 80002f8:	687b      	ldr	r3, [r7, #4]
 80002fa:	795b      	ldrb	r3, [r3, #5]
 80002fc:	001a      	movs	r2, r3
 80002fe:	687b      	ldr	r3, [r7, #4]
 8000300:	791b      	ldrb	r3, [r3, #4]
 8000302:	005b      	lsls	r3, r3, #1
 8000304:	409a      	lsls	r2, r3
 8000306:	0013      	movs	r3, r2
 8000308:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << (2 * pGPIOHandle->pinConfig.pinNumber));
 800030a:	687b      	ldr	r3, [r7, #4]
 800030c:	681b      	ldr	r3, [r3, #0]
 800030e:	681a      	ldr	r2, [r3, #0]
 8000310:	687b      	ldr	r3, [r7, #4]
 8000312:	791b      	ldrb	r3, [r3, #4]
 8000314:	005b      	lsls	r3, r3, #1
 8000316:	2103      	movs	r1, #3
 8000318:	4099      	lsls	r1, r3
 800031a:	000b      	movs	r3, r1
 800031c:	43db      	mvns	r3, r3
 800031e:	0019      	movs	r1, r3
 8000320:	687b      	ldr	r3, [r7, #4]
 8000322:	681b      	ldr	r3, [r3, #0]
 8000324:	400a      	ands	r2, r1
 8000326:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 8000328:	687b      	ldr	r3, [r7, #4]
 800032a:	681b      	ldr	r3, [r3, #0]
 800032c:	6819      	ldr	r1, [r3, #0]
 800032e:	687b      	ldr	r3, [r7, #4]
 8000330:	681b      	ldr	r3, [r3, #0]
 8000332:	68fa      	ldr	r2, [r7, #12]
 8000334:	430a      	orrs	r2, r1
 8000336:	601a      	str	r2, [r3, #0]
		// //3 . enable the exti interrupt delivery using IMR
		// EXTI->IMR |= 1 << pGPIOHandle->pinConfig.pinNumber;
	}

	//2. configure the speed
	temp = (pGPIOHandle->pinConfig.pinSpeed << (2 * pGPIOHandle->pinConfig.pinNumber));
 8000338:	687b      	ldr	r3, [r7, #4]
 800033a:	799b      	ldrb	r3, [r3, #6]
 800033c:	001a      	movs	r2, r3
 800033e:	687b      	ldr	r3, [r7, #4]
 8000340:	791b      	ldrb	r3, [r3, #4]
 8000342:	005b      	lsls	r3, r3, #1
 8000344:	409a      	lsls	r2, r3
 8000346:	0013      	movs	r3, r2
 8000348:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << (2 * pGPIOHandle->pinConfig.pinNumber));
 800034a:	687b      	ldr	r3, [r7, #4]
 800034c:	681b      	ldr	r3, [r3, #0]
 800034e:	689a      	ldr	r2, [r3, #8]
 8000350:	687b      	ldr	r3, [r7, #4]
 8000352:	791b      	ldrb	r3, [r3, #4]
 8000354:	005b      	lsls	r3, r3, #1
 8000356:	2103      	movs	r1, #3
 8000358:	4099      	lsls	r1, r3
 800035a:	000b      	movs	r3, r1
 800035c:	43db      	mvns	r3, r3
 800035e:	0019      	movs	r1, r3
 8000360:	687b      	ldr	r3, [r7, #4]
 8000362:	681b      	ldr	r3, [r3, #0]
 8000364:	400a      	ands	r2, r1
 8000366:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 8000368:	687b      	ldr	r3, [r7, #4]
 800036a:	681b      	ldr	r3, [r3, #0]
 800036c:	6899      	ldr	r1, [r3, #8]
 800036e:	687b      	ldr	r3, [r7, #4]
 8000370:	681b      	ldr	r3, [r3, #0]
 8000372:	68fa      	ldr	r2, [r7, #12]
 8000374:	430a      	orrs	r2, r1
 8000376:	609a      	str	r2, [r3, #8]

	//3. configure the pupd settings
	temp = (pGPIOHandle->pinConfig.pinPuPdControl << (2 * pGPIOHandle->pinConfig.pinNumber));
 8000378:	687b      	ldr	r3, [r7, #4]
 800037a:	79db      	ldrb	r3, [r3, #7]
 800037c:	001a      	movs	r2, r3
 800037e:	687b      	ldr	r3, [r7, #4]
 8000380:	791b      	ldrb	r3, [r3, #4]
 8000382:	005b      	lsls	r3, r3, #1
 8000384:	409a      	lsls	r2, r3
 8000386:	0013      	movs	r3, r2
 8000388:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << (2 * pGPIOHandle->pinConfig.pinNumber));
 800038a:	687b      	ldr	r3, [r7, #4]
 800038c:	681b      	ldr	r3, [r3, #0]
 800038e:	68da      	ldr	r2, [r3, #12]
 8000390:	687b      	ldr	r3, [r7, #4]
 8000392:	791b      	ldrb	r3, [r3, #4]
 8000394:	005b      	lsls	r3, r3, #1
 8000396:	2103      	movs	r1, #3
 8000398:	4099      	lsls	r1, r3
 800039a:	000b      	movs	r3, r1
 800039c:	43db      	mvns	r3, r3
 800039e:	0019      	movs	r1, r3
 80003a0:	687b      	ldr	r3, [r7, #4]
 80003a2:	681b      	ldr	r3, [r3, #0]
 80003a4:	400a      	ands	r2, r1
 80003a6:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 80003a8:	687b      	ldr	r3, [r7, #4]
 80003aa:	681b      	ldr	r3, [r3, #0]
 80003ac:	68d9      	ldr	r1, [r3, #12]
 80003ae:	687b      	ldr	r3, [r7, #4]
 80003b0:	681b      	ldr	r3, [r3, #0]
 80003b2:	68fa      	ldr	r2, [r7, #12]
 80003b4:	430a      	orrs	r2, r1
 80003b6:	60da      	str	r2, [r3, #12]

	//4. configure the optype
	temp = (pGPIOHandle->pinConfig.pinOPType << pGPIOHandle->pinConfig.pinNumber);
 80003b8:	687b      	ldr	r3, [r7, #4]
 80003ba:	7a1b      	ldrb	r3, [r3, #8]
 80003bc:	001a      	movs	r2, r3
 80003be:	687b      	ldr	r3, [r7, #4]
 80003c0:	791b      	ldrb	r3, [r3, #4]
 80003c2:	409a      	lsls	r2, r3
 80003c4:	0013      	movs	r3, r2
 80003c6:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << pGPIOHandle->pinConfig.pinNumber);
 80003c8:	687b      	ldr	r3, [r7, #4]
 80003ca:	681b      	ldr	r3, [r3, #0]
 80003cc:	685a      	ldr	r2, [r3, #4]
 80003ce:	687b      	ldr	r3, [r7, #4]
 80003d0:	791b      	ldrb	r3, [r3, #4]
 80003d2:	0019      	movs	r1, r3
 80003d4:	2301      	movs	r3, #1
 80003d6:	408b      	lsls	r3, r1
 80003d8:	43db      	mvns	r3, r3
 80003da:	0019      	movs	r1, r3
 80003dc:	687b      	ldr	r3, [r7, #4]
 80003de:	681b      	ldr	r3, [r3, #0]
 80003e0:	400a      	ands	r2, r1
 80003e2:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 80003e4:	687b      	ldr	r3, [r7, #4]
 80003e6:	681b      	ldr	r3, [r3, #0]
 80003e8:	6859      	ldr	r1, [r3, #4]
 80003ea:	687b      	ldr	r3, [r7, #4]
 80003ec:	681b      	ldr	r3, [r3, #0]
 80003ee:	68fa      	ldr	r2, [r7, #12]
 80003f0:	430a      	orrs	r2, r1
 80003f2:	605a      	str	r2, [r3, #4]

	//5. configure the alt functionality
	if (pGPIOHandle->pinConfig.pinMode == GPIO_MODE_ALTFN)
 80003f4:	687b      	ldr	r3, [r7, #4]
 80003f6:	795b      	ldrb	r3, [r3, #5]
 80003f8:	2b02      	cmp	r3, #2
 80003fa:	d13b      	bne.n	8000474 <GPIO_Init+0x19c>
	{
		uint8_t afrReg, regSection;

		afrReg = pGPIOHandle->pinConfig.pinNumber / 8;
 80003fc:	687b      	ldr	r3, [r7, #4]
 80003fe:	791a      	ldrb	r2, [r3, #4]
 8000400:	240b      	movs	r4, #11
 8000402:	193b      	adds	r3, r7, r4
 8000404:	08d2      	lsrs	r2, r2, #3
 8000406:	701a      	strb	r2, [r3, #0]
		regSection = pGPIOHandle->pinConfig.pinNumber % 8;
 8000408:	687b      	ldr	r3, [r7, #4]
 800040a:	791a      	ldrb	r2, [r3, #4]
 800040c:	250a      	movs	r5, #10
 800040e:	197b      	adds	r3, r7, r5
 8000410:	2107      	movs	r1, #7
 8000412:	400a      	ands	r2, r1
 8000414:	701a      	strb	r2, [r3, #0]
		pGPIOHandle->pGPIOx->AFR[afrReg] &= ~(0xF << (4 * regSection));
 8000416:	687b      	ldr	r3, [r7, #4]
 8000418:	681b      	ldr	r3, [r3, #0]
 800041a:	193a      	adds	r2, r7, r4
 800041c:	7812      	ldrb	r2, [r2, #0]
 800041e:	3208      	adds	r2, #8
 8000420:	0092      	lsls	r2, r2, #2
 8000422:	58d1      	ldr	r1, [r2, r3]
 8000424:	197b      	adds	r3, r7, r5
 8000426:	781b      	ldrb	r3, [r3, #0]
 8000428:	009b      	lsls	r3, r3, #2
 800042a:	220f      	movs	r2, #15
 800042c:	409a      	lsls	r2, r3
 800042e:	0013      	movs	r3, r2
 8000430:	43db      	mvns	r3, r3
 8000432:	0018      	movs	r0, r3
 8000434:	687b      	ldr	r3, [r7, #4]
 8000436:	681b      	ldr	r3, [r3, #0]
 8000438:	193a      	adds	r2, r7, r4
 800043a:	7812      	ldrb	r2, [r2, #0]
 800043c:	4001      	ands	r1, r0
 800043e:	3208      	adds	r2, #8
 8000440:	0092      	lsls	r2, r2, #2
 8000442:	50d1      	str	r1, [r2, r3]
		pGPIOHandle->pGPIOx->AFR[afrReg] |= (pGPIOHandle->pinConfig.pinAltFunMode << (4 * regSection));
 8000444:	687b      	ldr	r3, [r7, #4]
 8000446:	681b      	ldr	r3, [r3, #0]
 8000448:	193a      	adds	r2, r7, r4
 800044a:	7812      	ldrb	r2, [r2, #0]
 800044c:	3208      	adds	r2, #8
 800044e:	0092      	lsls	r2, r2, #2
 8000450:	58d1      	ldr	r1, [r2, r3]
 8000452:	687b      	ldr	r3, [r7, #4]
 8000454:	7a5b      	ldrb	r3, [r3, #9]
 8000456:	001a      	movs	r2, r3
 8000458:	197b      	adds	r3, r7, r5
 800045a:	781b      	ldrb	r3, [r3, #0]
 800045c:	009b      	lsls	r3, r3, #2
 800045e:	409a      	lsls	r2, r3
 8000460:	0013      	movs	r3, r2
 8000462:	0018      	movs	r0, r3
 8000464:	687b      	ldr	r3, [r7, #4]
 8000466:	681b      	ldr	r3, [r3, #0]
 8000468:	193a      	adds	r2, r7, r4
 800046a:	7812      	ldrb	r2, [r2, #0]
 800046c:	4301      	orrs	r1, r0
 800046e:	3208      	adds	r2, #8
 8000470:	0092      	lsls	r2, r2, #2
 8000472:	50d1      	str	r1, [r2, r3]
	}
}
 8000474:	46c0      	nop			; (mov r8, r8)
 8000476:	46bd      	mov	sp, r7
 8000478:	b004      	add	sp, #16
 800047a:	bdb0      	pop	{r4, r5, r7, pc}

0800047c <GPIO_ReadFromInputPin>:
		GPIOH_REG_RESET();
	}
}

uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t pinNumber)
{
 800047c:	b580      	push	{r7, lr}
 800047e:	b082      	sub	sp, #8
 8000480:	af00      	add	r7, sp, #0
 8000482:	6078      	str	r0, [r7, #4]
 8000484:	000a      	movs	r2, r1
 8000486:	1cfb      	adds	r3, r7, #3
 8000488:	701a      	strb	r2, [r3, #0]
   return (uint8_t) ((pGPIOx->IDR >> pinNumber) & 0x00000001);
 800048a:	687b      	ldr	r3, [r7, #4]
 800048c:	691a      	ldr	r2, [r3, #16]
 800048e:	1cfb      	adds	r3, r7, #3
 8000490:	781b      	ldrb	r3, [r3, #0]
 8000492:	40da      	lsrs	r2, r3
 8000494:	0013      	movs	r3, r2
 8000496:	b2db      	uxtb	r3, r3
 8000498:	2201      	movs	r2, #1
 800049a:	4013      	ands	r3, r2
 800049c:	b2db      	uxtb	r3, r3
}
 800049e:	0018      	movs	r0, r3
 80004a0:	46bd      	mov	sp, r7
 80004a2:	b002      	add	sp, #8
 80004a4:	bd80      	pop	{r7, pc}

080004a6 <GPIO_ToggleOutputPin>:
{
	pGPIOx->ODR = value;
}

void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t pinNumber)
{
 80004a6:	b580      	push	{r7, lr}
 80004a8:	b082      	sub	sp, #8
 80004aa:	af00      	add	r7, sp, #0
 80004ac:	6078      	str	r0, [r7, #4]
 80004ae:	000a      	movs	r2, r1
 80004b0:	1cfb      	adds	r3, r7, #3
 80004b2:	701a      	strb	r2, [r3, #0]
	pGPIOx->ODR  ^= (1 << pinNumber);
 80004b4:	687b      	ldr	r3, [r7, #4]
 80004b6:	695b      	ldr	r3, [r3, #20]
 80004b8:	1cfa      	adds	r2, r7, #3
 80004ba:	7812      	ldrb	r2, [r2, #0]
 80004bc:	2101      	movs	r1, #1
 80004be:	4091      	lsls	r1, r2
 80004c0:	000a      	movs	r2, r1
 80004c2:	405a      	eors	r2, r3
 80004c4:	687b      	ldr	r3, [r7, #4]
 80004c6:	615a      	str	r2, [r3, #20]
}
 80004c8:	46c0      	nop			; (mov r8, r8)
 80004ca:	46bd      	mov	sp, r7
 80004cc:	b002      	add	sp, #8
 80004ce:	bd80      	pop	{r7, pc}

080004d0 <__libc_init_array>:
 80004d0:	b570      	push	{r4, r5, r6, lr}
 80004d2:	2600      	movs	r6, #0
 80004d4:	4c0c      	ldr	r4, [pc, #48]	; (8000508 <__libc_init_array+0x38>)
 80004d6:	4d0d      	ldr	r5, [pc, #52]	; (800050c <__libc_init_array+0x3c>)
 80004d8:	1b64      	subs	r4, r4, r5
 80004da:	10a4      	asrs	r4, r4, #2
 80004dc:	42a6      	cmp	r6, r4
 80004de:	d109      	bne.n	80004f4 <__libc_init_array+0x24>
 80004e0:	2600      	movs	r6, #0
 80004e2:	f000 f819 	bl	8000518 <_init>
 80004e6:	4c0a      	ldr	r4, [pc, #40]	; (8000510 <__libc_init_array+0x40>)
 80004e8:	4d0a      	ldr	r5, [pc, #40]	; (8000514 <__libc_init_array+0x44>)
 80004ea:	1b64      	subs	r4, r4, r5
 80004ec:	10a4      	asrs	r4, r4, #2
 80004ee:	42a6      	cmp	r6, r4
 80004f0:	d105      	bne.n	80004fe <__libc_init_array+0x2e>
 80004f2:	bd70      	pop	{r4, r5, r6, pc}
 80004f4:	00b3      	lsls	r3, r6, #2
 80004f6:	58eb      	ldr	r3, [r5, r3]
 80004f8:	4798      	blx	r3
 80004fa:	3601      	adds	r6, #1
 80004fc:	e7ee      	b.n	80004dc <__libc_init_array+0xc>
 80004fe:	00b3      	lsls	r3, r6, #2
 8000500:	58eb      	ldr	r3, [r5, r3]
 8000502:	4798      	blx	r3
 8000504:	3601      	adds	r6, #1
 8000506:	e7f2      	b.n	80004ee <__libc_init_array+0x1e>
 8000508:	08000530 	.word	0x08000530
 800050c:	08000530 	.word	0x08000530
 8000510:	08000534 	.word	0x08000534
 8000514:	08000530 	.word	0x08000530

08000518 <_init>:
 8000518:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800051a:	46c0      	nop			; (mov r8, r8)
 800051c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800051e:	bc08      	pop	{r3}
 8000520:	469e      	mov	lr, r3
 8000522:	4770      	bx	lr

08000524 <_fini>:
 8000524:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000526:	46c0      	nop			; (mov r8, r8)
 8000528:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800052a:	bc08      	pop	{r3}
 800052c:	469e      	mov	lr, r3
 800052e:	4770      	bx	lr
